[{"/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/index.js":"1","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/App.js":"2","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/Chat.js":"3","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/Test.js":"4","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/chatbot.js":"5","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/PDFExtract.js":"6","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/Main.js":"7","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/PDFUpload.js":"8","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/MessageBubble.js":"9"},{"size":686,"mtime":1692880393072,"results":"10","hashOfConfig":"11"},{"size":2288,"mtime":1692880393072,"results":"12","hashOfConfig":"11"},{"size":256,"mtime":1692880393072,"results":"13","hashOfConfig":"11"},{"size":2865,"mtime":1692880393072,"results":"14","hashOfConfig":"11"},{"size":4904,"mtime":1692881985598,"results":"15","hashOfConfig":"11"},{"size":1159,"mtime":1692880393072,"results":"16","hashOfConfig":"11"},{"size":231,"mtime":1692880393072,"results":"17","hashOfConfig":"11"},{"size":949,"mtime":1692880393072,"results":"18","hashOfConfig":"11"},{"size":1014,"mtime":1692880393072,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"14g6hrq",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"24"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/index.js",["55","56","57","58","59","60","61"],[],"import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport App from './App';\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom'\nimport Chat from './Chat';\nimport Test from './Test'\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\nReactDOM.render(\n  // <Test />,\n  <Chat />,\n  // <GoogleOAuthProvider clientId=\"907824685069-6mlq4rgbjs5g4f9a075thftst08eur4v.apps.googleusercontent.com\">\n  //   <React.StrictMode>\n  //     <Router>\n  //       <App />\n  //     </Router>\n  //   </React.StrictMode>\n  // </GoogleOAuthProvider>,\n  document.getElementById('root')\n);",[],"/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/App.js",["62"],[],"import React, { useState, useEffect } from 'react';\nimport { googleLogout, useGoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport { Routes, Route } from 'react-router-dom'\nimport Main from './Main'\nimport Chat from './Chat'\nimport PDFExtract from './PDFExtract';\n\nfunction App() {\n\n  const baseurl = \"http://localhost:8080\";\n\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n\n  const login = useGoogleLogin({\n    onSuccess: (response) => setUser(response),\n    onError: (error) => console.log('Login Failed:', error),\n  });\n\n  useEffect(() => {\n    if (profile) {\n      axios\n        .post(baseurl + \"url\", {\n          email:profile.email\n        })\n        .then((response) => {\n          console.log(response.data);\n        })\n        .catch((error) => console.log(error));\n    }\n  }, [profile])\n\n  useEffect(() => {\n      if (user) {\n        axios\n          .get(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n            headers: {\n              Authorization: `Bearer ${user.access_token}`,\n              Accept: 'application/json'\n            }\n          })\n          .then((res) => {\n            setProfile(res.data);\n          })\n          .catch((err) => console.log(err));\n      }\n    },\n    [user]\n  );\n\n  // log out function to log the user out of google and set the profile array to null\n  const logOut = () => {\n    googleLogout();\n    setProfile(null);\n  };\n\n  return (\n    <div>\n      {profile ? (\n        // console.log('user', user),\n        // console.log('profile', profile),\n        <Routes>\n          <Route exact path=\"/DongAJul_APP\" element={<Main />} />\n          <Route exact path=\"/chat\" element={<Chat />} />\n          <Route exact path=\"pdfextract\" element={<PDFExtract />} />\n        </Routes>\n        // <div>\n        //     <img src={profile.picture} alt=\"user image\" />\n        //     <h3>User Logged in</h3>\n        //     <p>Name: {profile.name}</p>\n        //     <p>Email Address: {profile.email}</p>\n        //     <br />\n        //     <br />\n        //     <button onClick={logOut}>Log out</button>\n        // </div>\n      ) : (\n        <button onClick={() => login()}>Sign in with Google</button>\n      )}\n    </div>\n  );\n}\n\nexport default App;","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/Chat.js",["63","64"],[],"import React from 'react';\nimport { useState, useRef } from 'react'\nimport Chatbot from './chatbot';\nimport './Chat.css'\n\nfunction Chat({messages, handleSendMessage}) {\n  return (\n    <div>\n      <Chatbot></Chatbot>\n    </div>\n  );\n};\n\nexport default Chat;","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/Test.js",[],[],"/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/chatbot.js",["65","66"],[],"import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { pdfjs } from 'react-pdf'\nimport './Chat.css'\nimport MessageBubble from './MessageBubble';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst API_ENDPOINT = 'https://api.openai.com/v1/chat/completions'; // API endpoint for the GPT-3.5 model\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [allText, setAllText] = useState('');\n  const textareaRef = useRef(null);\n\n  function PDFUpload() {\n    const [file, setFile] = useState(null);\n    const [numPages, setNumPages] = useState(null);\n    const fileInputRef = useRef(null);\n\n    function onFileChange(e) {\n      setFile(e.target.files[0]);\n    }\n\n    function onDocumentLoadSuccess({ numPages }) {\n      setNumPages(numPages);\n    }\n\n    function handleUploadClick() {\n      fileInputRef.current.click();\n    }\n\n    return (\n      <div>\n        <button onClick={handleUploadClick}>PDF Upload</button>\n        <input\n          type=\"file\"\n          accept=\".pdf\"\n          onChange={onFileChange}\n          style={{ display: 'none' }}\n          ref={fileInputRef}\n        />\n        {file && (\n          <PDFExtract file={file} />\n        )}\n      </div>\n    );\n  }\n\n  function PDFExtract({ file }) {\n\n    useEffect(() => {\n      async function extractTextFromFile() {\n        const pdf = await pdfjs.getDocument({ url: URL.createObjectURL(file) }).promise;\n        const numPages = pdf.numPages;\n        let newText = '';\n\n        for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n          const page = await pdf.getPage(pageNumber);\n          const content = await page.getTextContent();\n          const strings = content.items.map((item) => item.str);\n          newText += strings.join(' ') + ' ';\n        }\n\n        setAllText(newText);\n      }\n\n      if (file) {\n        extractTextFromFile();\n      }\n    }, [file]);\n\n    return (\n      <div>\n        {/* <p>Extract PDF Text</p>\n        <pre>{allText}</pre> */}\n      </div>\n    );\n  }\n\n  const handleSendMessage = async (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n\n      if (userInput.trim() === '') return;\n\n      // Include the user message in the messages state\n      const newMessage = { role: 'user', content: userInput };\n      setMessages((prevMessages) => [...prevMessages, newMessage]);\n      setUserInput('');\n      setAllText('');\n\n      try {\n        const response = await axios.post(\n          API_ENDPOINT,\n          {\n            model: 'gpt-3.5-turbo',\n            messages: [...messages, newMessage].map((message) => ({ role: message.role, content: message.content })),\n          },\n          {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${API_KEY}`,\n            },\n          }\n        );\n\n        const assistantMessage = response.data.choices[0].message.content;\n        // Include the assistant message in the messages state\n        setMessages((prevMessages) => [...prevMessages, { role: 'assistant', content: assistantMessage }]);\n      } catch (error) {\n        console.error('Error occurred while fetching the response:', error);\n      }\n    }\n  };\n\n  const handleTextAreaHeight = (e) => {\n    e.target.style.height = 'auto';\n    e.target.style.height = e.target.scrollHeight + 'px';\n  }\n\n  return (\n    <div>\n      <PDFUpload />\n      <div>\n        {messages.map((message, index) => (\n          <div key={index}>\n            {message.role === 'user' ? (\n              <div>\n                <div className='prompt-bubble-container'>\n                  <div className='prompt-bubble'>\n                    <div className='prompt-bubble-content'>\n                      {message.content}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <MessageBubble message={message.content} />\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      <div>\n        <footer></footer>\n      </div>\n      <div className='prompt-container'>\n        <div className='prompt-textarea-container'>\n          <textarea ref={textareaRef} value={userInput + allText} rows=\"1\" className='prompt-textarea-box' onChange={(e) => setUserInput(e.target.value)} onKeyDown={handleSendMessage} placeholder=\"Thype Prompt Here...\" onInput={handleTextAreaHeight}></textarea>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbot;\n\n\n/* 궁금한 점\n - Chat 컴포넌트는 prompt를 입력할때마다 message 배열을 update하는데, 전에 render 했던 message element를\n   어떻게 re-render 하지 않고 새로운 element만 render를 하게 되지?\n\n*/","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/PDFExtract.js",["67"],[],"import React, { useEffect, useState } from 'react';\nimport { pdfjs } from 'react-pdf';\nimport Chatbot from './chatbot';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction PDFExtract({ file }) {\n    const [allText, setAllText] = useState('');\n\n    useEffect(() => {\n        async function extractTextFromFile() {\n            const pdf = await pdfjs.getDocument({ url: URL.createObjectURL(file) }).promise;\n            const numPages = pdf.numPages;\n            let newText = '';\n\n            for (let pageNumber = 1; pageNumber <= numPages; pageNumber++) {\n                const page = await pdf.getPage(pageNumber);\n                const content = await page.getTextContent();\n                const strings = content.items.map((item) => item.str);\n                newText += strings.join(' ') + ' ';\n            }\n\n            setAllText(newText);\n        }\n\n        if (file) {\n            extractTextFromFile();\n        }\n    }, [file]);\n\n    return (\n        <div>\n            <p>Extract PDF Text</p>\n            <pre>{allText}</pre>\n        </div>\n    );\n}\n\nexport default PDFExtract;","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/Main.js",["68","69"],[],"import React, { useEffect } from 'react'\nimport { useNavigate } from \"react-router-dom\"\n\nconst Main = () => {\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        navigate('/chat')\n    }, []);\n}\n\nexport default Main;","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/PDFUpload.js",["70","71"],[],"import React, { useState, useRef } from 'react';\nimport { pdfjs } from 'react-pdf';\nimport PDFExtract from './PDFExtract';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nfunction Upload() {\n  const [file, setFile] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const fileInputRef = useRef(null);\n\n  function onFileChange(e) {\n    setFile(e.target.files[0]);\n  }\n\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages);\n  }\n\n  function handleUploadClick() {\n    fileInputRef.current.click();\n  }\n\n  return (\n    <div>\n      <button onClick={handleUploadClick}>PDF Upload</button>\n      <input\n        type=\"file\"\n        accept=\".pdf\"\n        onChange={onFileChange}\n        style={{ display: 'none' }}\n        ref={fileInputRef}\n      />\n      {file && (\n        <PDFExtract file={file} />\n      )}\n    </div>\n  );\n}\n\nexport default Upload;","/Users/yeonjaelee/Desktop/Projects/My Projects.nosync/web/DayByDay/DongAJul_APP_with_PDF/src/MessageBubble.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":29},{"ruleId":"72","severity":1,"message":"77","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":11},{"ruleId":"72","severity":1,"message":"78","line":5,"column":27,"nodeType":"74","messageId":"75","endLine":5,"endColumn":33},{"ruleId":"72","severity":1,"message":"79","line":5,"column":35,"nodeType":"74","messageId":"75","endLine":5,"endColumn":41},{"ruleId":"72","severity":1,"message":"80","line":5,"column":43,"nodeType":"74","messageId":"75","endLine":5,"endColumn":48},{"ruleId":"72","severity":1,"message":"81","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":12},{"ruleId":"72","severity":1,"message":"82","line":53,"column":9,"nodeType":"74","messageId":"75","endLine":53,"endColumn":15},{"ruleId":"72","severity":1,"message":"83","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":18},{"ruleId":"72","severity":1,"message":"84","line":2,"column":20,"nodeType":"74","messageId":"75","endLine":2,"endColumn":26},{"ruleId":"72","severity":1,"message":"85","line":19,"column":12,"nodeType":"74","messageId":"75","endLine":19,"endColumn":20},{"ruleId":"72","severity":1,"message":"86","line":26,"column":14,"nodeType":"74","messageId":"75","endLine":26,"endColumn":35},{"ruleId":"72","severity":1,"message":"87","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":15},{"ruleId":"72","severity":1,"message":"88","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":10,"column":8,"nodeType":"91","endLine":10,"endColumn":10,"suggestions":"92"},{"ruleId":"72","severity":1,"message":"85","line":8,"column":10,"nodeType":"74","messageId":"75","endLine":8,"endColumn":18},{"ruleId":"72","severity":1,"message":"86","line":15,"column":12,"nodeType":"74","messageId":"75","endLine":15,"endColumn":33},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'GoogleOAuthProvider' is defined but never used.","'App' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Test' is defined but never used.","'logOut' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'numPages' is assigned a value but never used.","'onDocumentLoadSuccess' is defined but never used.","'Chatbot' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["93"],{"desc":"94","fix":"95"},"Update the dependencies array to be: [navigate]",{"range":"96","text":"97"},[203,205],"[navigate]"]